drvPciMcor:
	slim pseudo 'driver' which just provides 'init' and 'report' entry
    points.

      'init' uses drvUioPciGen to scan the PCI bus for MCOR devices and
             register them with devBusMapped.

      'report' prints info about found MCOR devices.

    USAGE
    =====

      To build an application make sure the Makefile contains

         app_DBD += epicspci.dbd
         app_DBD += devBusMapped.dbd
         app_DBD += drvUioPciGen.dbd
         app_DBD += drvPciMcor.dbd

         app_LIBS += drvPciMcor
         app_LIBS += drvUioPciGen
         app_LIBS += epicspci
         app_LIBS += devBusMapped

      (of course, the RELEASE file must list all the respective EPICS modules
       and their dependencies - have fun).



To use MCOR interrupts, start the sample IRQ handling thread by supplying the following command to the startup script:
drvPciMcorIRQInit(<DEVICE FILE NAME>)
Example:
drvPciMcorIRQInit("/dev/mcor")

This command will enable MCOR interrupts and start the IRQ thread that will wait for interrupts on the file descriptor. After receiving the interrupt, it will write to the output the interrupt status register and enable back the MCOR interrupts.
